FROM golang:1.8.1-alpine

ARG DAPPER_HOST_ARCH
ENV HOST_ARCH=${DAPPER_HOST_ARCH} ARCH=${DAPPER_HOST_ARCH}

RUN apk -U add  gcc musl-dev ca-certificates git wget curl vim less file docker bash

RUN mkdir -p /go/src/golang.org/x && \
    cd /go/src/golang.org/x && git clone https://github.com/golang/tools && \
    cd tools && \
    git checkout release-branch.go1.8 && \
    go install golang.org/x/tools/cmd/goimports && \
    go get github.com/golang/lint/golint && \
    go install golang.org/x/lint/golint

RUN rm -rf /go/src /go/pkg

RUN if [ "${ARCH}" == "amd64" ]; then \
        curl -sL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.8.1; \
    fi

ENV DAPPER_ENV REGISTRY REGISTRY_USER REGISTRY_PASSWORD REPO TAG DRONE_TAG SKIP_GO_MOD REPO_RENAME UI_DOWNLOAD_BASE_URL SKIP_GO_PACKAGE_RUNNER CLCOS_BASE_IMAGE TINI_URL TINI_VERSION
ENV DAPPER_SOURCE /go/src/github.com/zionwu/monitoring-manager/
ENV DAPPER_OUTPUT ./bin ./dist
ENV DAPPER_DOCKER_SOCKET true
ENV TRASH_CACHE ${DAPPER_SOURCE}/.trash-cache
ENV HOME ${DAPPER_SOURCE}
WORKDIR ${DAPPER_SOURCE}

ENTRYPOINT ["./scripts/entry"]
CMD ["ci"]
